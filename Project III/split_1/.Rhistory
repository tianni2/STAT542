# Load your vocabulary and training data
#####################################
j = 4
setwd(paste("split_", j, sep=""))
#####################################
train = read.table("train.tsv",
stringsAsFactors = FALSE,
header = TRUE)
train$review <- gsub('<.*?>', ' ', train$review)
it_train = itoken(train$review,
preprocessor = tolower,
tokenizer = word_tokenizer)
vectorizer = vocab_vectorizer(create_vocabulary(myvocab,
ngram = c(1L, 2L)))
dtm_train = create_dtm(it_train, vectorizer)
set.seed(542)
ridge=cv.glmnet(x = dtm_train,
y = train$sentiment,
alpha = 1,
family='binomial')
#####################################
test <- read.table("test.tsv", stringsAsFactors = FALSE,
header = TRUE)
test$review <- gsub('<.*?>', ' ', test$review)
it_test = itoken(test$review,
preprocessor = tolower,
tokenizer = word_tokenizer)
vectorizer = vocab_vectorizer(create_vocabulary(myvocab,
ngram = c(1L, 2L)))
dtm_test = create_dtm(it_test, vectorizer)
#####################################
# Compute prediction
# Store your prediction for test data in a data frame
# "output": col 1 is test$id
#           col 2 is the predicted probabilities
#####################################
set.seed(542)
pred.ridge=predict(ridge,newx=data.matrix(dtm_test),type = "response",lambda=ridge$lambda.min)
output=as.data.frame(cbind(test$id,pred.ridge))
colnames(output)=c("id","prob")
write.table(output, file = "mysubmission.txt",
row.names = FALSE, sep='\t')
library(pROC)
j = 4
setwd(paste("split_", j, sep=""))
pred <- read.table("mysubmission.txt", header = TRUE)
test.y <- read.table("test_y.tsv", header = TRUE)
pred <- merge(pred, test.y, by="id")
roc_obj <- roc(pred$sentiment, pred$prob)
pROC::auc(roc_obj)
myvocab <- scan(file = "myvocab.txt", what = character())
#####################################
# Load your vocabulary and training data
#####################################
j = 5
setwd(paste("split_", j, sep=""))
#####################################
train = read.table("train.tsv",
stringsAsFactors = FALSE,
header = TRUE)
train$review <- gsub('<.*?>', ' ', train$review)
it_train = itoken(train$review,
preprocessor = tolower,
tokenizer = word_tokenizer)
vectorizer = vocab_vectorizer(create_vocabulary(myvocab,
ngram = c(1L, 2L)))
dtm_train = create_dtm(it_train, vectorizer)
set.seed(542)
ridge=cv.glmnet(x = dtm_train,
y = train$sentiment,
alpha = 1,
family='binomial')
#####################################
test <- read.table("test.tsv", stringsAsFactors = FALSE,
header = TRUE)
test$review <- gsub('<.*?>', ' ', test$review)
it_test = itoken(test$review,
preprocessor = tolower,
tokenizer = word_tokenizer)
vectorizer = vocab_vectorizer(create_vocabulary(myvocab,
ngram = c(1L, 2L)))
dtm_test = create_dtm(it_test, vectorizer)
#####################################
# Compute prediction
# Store your prediction for test data in a data frame
# "output": col 1 is test$id
#           col 2 is the predicted probabilities
#####################################
set.seed(542)
pred.ridge=predict(ridge,newx=data.matrix(dtm_test),type = "response",lambda=ridge$lambda.min)
output=as.data.frame(cbind(test$id,pred.ridge))
colnames(output)=c("id","prob")
write.table(output, file = "mysubmission.txt",
row.names = FALSE, sep='\t')
library(pROC)
j = 5
setwd(paste("split_", j, sep=""))
pred <- read.table("mysubmission.txt", header = TRUE)
test.y <- read.table("test_y.tsv", header = TRUE)
pred <- merge(pred, test.y, by="id")
roc_obj <- roc(pred$sentiment, pred$prob)
pROC::auc(roc_obj)
j = 5
setwd(paste("split_", j, sep=""))
library(pROC)
source(mymain.R)
library(pROC)
source(mymain.R)
library(pROC)
source(mymain.R)
mymain.R
library(pROC)
source("mymain.R")
source("mymain.R")
source(mymain.R)
source("mymain.R")
source("mymain.R")
getwd()
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/UIUC/STAT 542/Project III")
source("mymain.R")
library(pROC)
j = 1
setwd(paste("split_", j, sep=""))
#getwd()
#setwd("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/UIUC/STAT 542/Project III")
#source("mymain.R")
# move test_y.tsv to this directory
test.y <- read.table("test_y.tsv", header = TRUE)
pred <- read.table("mysubmission.txt", header = TRUE)
pred <- merge(pred, test.y, by="id")
roc_obj <- roc(pred$sentiment, pred$prob)
pROC::auc(roc_obj)
j = 2
setwd(paste("split_", j, sep=""))
#getwd()
#setwd("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/UIUC/STAT 542/Project III")
#source("mymain.R")
# move test_y.tsv to this directory
test.y <- read.table("test_y.tsv", header = TRUE)
pred <- read.table("mysubmission.txt", header = TRUE)
pred <- merge(pred, test.y, by="id")
roc_obj <- roc(pred$sentiment, pred$prob)
pROC::auc(roc_obj)
j = 3
setwd(paste("split_", j, sep=""))
#getwd()
#setwd("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/UIUC/STAT 542/Project III")
#source("mymain.R")
# move test_y.tsv to this directory
test.y <- read.table("test_y.tsv", header = TRUE)
pred <- read.table("mysubmission.txt", header = TRUE)
pred <- merge(pred, test.y, by="id")
roc_obj <- roc(pred$sentiment, pred$prob)
pROC::auc(roc_obj)
j = 1
setwd(paste("split_", j, sep=""))
#getwd()
#setwd("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/UIUC/STAT 542/Project III")
#source("mymain.R")
# move test_y.tsv to this directory
test.y <- read.table("test_y.tsv", header = TRUE)
pred <- read.table("mysubmission.txt", header = TRUE)
pred <- merge(pred, test.y, by="id")
roc_obj <- roc(pred$sentiment, pred$prob)
pROC::auc(roc_obj)
j = 2
setwd(paste("split_", j, sep=""))
#getwd()
#setwd("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/UIUC/STAT 542/Project III")
#source("mymain.R")
# move test_y.tsv to this directory
test.y <- read.table("test_y.tsv", header = TRUE)
pred <- read.table("mysubmission.txt", header = TRUE)
pred <- merge(pred, test.y, by="id")
roc_obj <- roc(pred$sentiment, pred$prob)
pROC::auc(roc_obj)
j = 5
setwd(paste("split_", j, sep=""))
j = 2
setwd(paste("split_", j, sep=""))
j = 1
setwd(paste("split_", j, sep=""))
j = 2
setwd(paste("split_", j, sep=""))
j = 2
setwd(paste("split_", j, sep=""))
#getwd()
#setwd("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/UIUC/STAT 542/Project III")
#source("mymain.R")
# move test_y.tsv to this directory
test.y <- read.table("test_y.tsv", header = TRUE)
pred <- read.table("mysubmission.txt", header = TRUE)
pred <- merge(pred, test.y, by="id")
roc_obj <- roc(pred$sentiment, pred$prob)
pROC::auc(roc_obj)
library(pROC)
j = 2
setwd(paste("split_", j, sep=""))
#getwd()
#setwd("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/UIUC/STAT 542/Project III")
#source("mymain.R")
# move test_y.tsv to this directory
test.y <- read.table("test_y.tsv", header = TRUE)
pred <- read.table("mysubmission.txt", header = TRUE)
pred <- merge(pred, test.y, by="id")
roc_obj <- roc(pred$sentiment, pred$prob)
pROC::auc(roc_obj)
getwd()
#setwd(paste("split_", j, sep=""))
setwd(paste("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/UIUC/STAT 542/Project III/split_", j, sep = ""))
#source("mymain.R")
# move test_y.tsv to this directory
test.y <- read.table("test_y.tsv", header = TRUE)
pred <- read.table("mysubmission.txt", header = TRUE)
pred <- merge(pred, test.y, by="id")
roc_obj <- roc(pred$sentiment, pred$prob)
pROC::auc(roc_obj)
j = 3
#setwd(paste("split_", j, sep=""))
setwd(paste("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/UIUC/STAT 542/Project III/split_", j, sep = ""))
#source("mymain.R")
# move test_y.tsv to this directory
test.y <- read.table("test_y.tsv", header = TRUE)
pred <- read.table("mysubmission.txt", header = TRUE)
pred <- merge(pred, test.y, by="id")
roc_obj <- roc(pred$sentiment, pred$prob)
pROC::auc(roc_obj)
j = 4
#setwd(paste("split_", j, sep=""))
setwd(paste("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/UIUC/STAT 542/Project III/split_", j, sep = ""))
#source("mymain.R")
# move test_y.tsv to this directory
test.y <- read.table("test_y.tsv", header = TRUE)
pred <- read.table("mysubmission.txt", header = TRUE)
pred <- merge(pred, test.y, by="id")
roc_obj <- roc(pred$sentiment, pred$prob)
pROC::auc(roc_obj)
j = 5
#setwd(paste("split_", j, sep=""))
setwd(paste("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/UIUC/STAT 542/Project III/split_", j, sep = ""))
#source("mymain.R")
# move test_y.tsv to this directory
test.y <- read.table("test_y.tsv", header = TRUE)
pred <- read.table("mysubmission.txt", header = TRUE)
pred <- merge(pred, test.y, by="id")
roc_obj <- roc(pred$sentiment, pred$prob)
pROC::auc(roc_obj)
which(pred != test.y)
#source("mymain.R")
# move test_y.tsv to this directory
test.y <- read.table("test_y.tsv", header = TRUE)
pred <- read.table("mysubmission.txt", header = TRUE)
which(pred != test.y)
which(pred$prob != test.y$sentiment)
pred$prob
pred.sent=ifelse(pred$prob>0.5,1,0)
which(pred.sent != test.y$sentiment)
idd=test.y$id[which(pred.sent != test.y$sentiment)]
idd
text=read.table("test.tsv",header = TRUE)
test$review[180]
test.y[180,]
test[180,]
test[which(test$id=="180"),]
test.y[which(test.y$id=="180"),]
myvocab <- scan(file = "myvocab.txt", what = character())
#####################################
# Load your vocabulary and training data
#####################################
j = 1
setwd(paste("split_", j, sep=""))
#####################################
train = read.table("train.tsv",
stringsAsFactors = FALSE,
header = TRUE)
train$review <- gsub('<.*?>', ' ', train$review)
it_train = itoken(train$review,
preprocessor = tolower,
tokenizer = word_tokenizer)
vectorizer = vocab_vectorizer(create_vocabulary(myvocab,
ngram = c(1L, 2L)))
dtm_train = create_dtm(it_train, vectorizer)
set.seed(542)
ridge=cv.glmnet(x = dtm_train,
y = train$sentiment,
alpha = 1,
family='binomial')
ridge$glmnet.fit
ridge$lambda
coef(ridge)
coef=coef(ridge)
coef
coef[,2]
coef[[2]]
coef[[1]]
coef[1]
coef[2]
coef
coef[1]
which.max(coef)
range(coef)
coef
range(coef)
coef[which(coef==-2.846152)]
range(coef)
coef[which(coef==-2.846152)]
coef
sort(coef)
coef
colnames(coef)
coef
write.csv(coef,"coef.csv")
data.frame(coef)
as.data.frame(coef)
as.matrix(coef)
write.csv(as.matrix(coef),"coef.csv")
as.matrix(coef)
library(pROC)
j = 1
#setwd(paste("split_", j, sep=""))
setwd(paste("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/UIUC/STAT 542/Project III/split_", j, sep = ""))
#source("mymain.R")
# move test_y.tsv to this directory
test.y <- read.table("test_y.tsv", header = TRUE)
pred <- read.table("mysubmission.txt", header = TRUE)
pred <- merge(pred, test.y, by="id")
roc_obj <- roc(pred$sentiment, pred$prob)
pROC::auc(roc_obj)
pred.sent=ifelse(pred$prob>0.5,1,0)
which(pred.sent != test.y$sentiment)
id=test.y$id[which(pred.sent != test.y$sentiment)]
pred.sent=ifelse(pred$prob>0.5,1,0)
id=test.y$id[which(pred.sent != test.y$sentiment)]
text=read.table("test.tsv",header = TRUE)
id
rank(id)
range(id)
sort(id)
test[which(test$id==2),]
test.y[which(test.y$id==2),]
pred[which(pred$id==2),]
pred[which(pred$id==2),]
head(pred)
library(pROC)
j = 1
#setwd(paste("split_", j, sep=""))
setwd(paste("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/UIUC/STAT 542/Project III/split_", j, sep = ""))
#source("mymain.R")
# move test_y.tsv to this directory
test.y <- read.table("test_y.tsv", header = TRUE)
pred <- read.table("mysubmission.txt", header = TRUE)
pred <- merge(pred, test.y, by="id")
roc_obj <- roc(pred$sentiment, pred$prob)
pROC::auc(roc_obj)
head(pred)
test[which(test$id==3),]
test.y[which(test.y$id==3),]
pred[which(pred$id==3),]
text=read.table("test.tsv",header = TRUE)
test[which(test$id==3),]
head(test)
head(pred)
head(pred$id)
head(test$id)
test$id
range(test$id)
text=read.table("test.tsv",header = TRUE)
sort(test$id)
head(pred)
test.y
j = 1
#setwd(paste("split_", j, sep=""))
setwd(paste("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/UIUC/STAT 542/Project III/split_", j, sep = ""))
#source("mymain.R")
# move test_y.tsv to this directory
test.y <- read.table("test_y.tsv", header = TRUE)
pred <- read.table("mysubmission.txt", header = TRUE)
pred <- merge(pred, test.y, by="id")
roc_obj <- roc(pred$sentiment, pred$prob)
pROC::auc(roc_obj)
head(pred)
text=read.table("test.tsv",header = TRUE)
head(test$id)
sort(test$id)
head(pred)
head(test$id)
sort(test$id)
test[which(test$id==3),]
head(pred)
j = 1
#setwd(paste("split_", j, sep=""))
setwd(paste("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/UIUC/STAT 542/Project III/split_", j, sep = ""))
#source("mymain.R")
# move test_y.tsv to this directory
test.y <- read.table("test_y.tsv", header = TRUE)
pred <- read.table("mysubmission.txt", header = TRUE)
pred <- merge(pred, test.y, by="id")
roc_obj <- roc(pred$sentiment, pred$prob)
pROC::auc(roc_obj)
head(pred)
text=read.table("test.tsv",header = TRUE)
head(test$id)
sort(test$id)
library(pROC)
j = 1
#setwd(paste("split_", j, sep=""))
setwd(paste("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/UIUC/STAT 542/Project III/split_", j, sep = ""))
#source("mymain.R")
# move test_y.tsv to this directory
test.y <- read.table("test_y.tsv", header = TRUE)
pred <- read.table("mysubmission.txt", header = TRUE)
text=read.table("test.tsv",header = TRUE)
pred <- merge(pred, test.y, by="id")
roc_obj <- roc(pred$sentiment, pred$prob)
pROC::auc(roc_obj)
sort(test$id)
library(pROC)
j = 2
#setwd(paste("split_", j, sep=""))
setwd(paste("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/UIUC/STAT 542/Project III/split_", j, sep = ""))
#source("mymain.R")
# move test_y.tsv to this directory
test.y <- read.table("test_y.tsv", header = TRUE)
pred <- read.table("mysubmission.txt", header = TRUE)
text=read.table("test.tsv",header = TRUE)
pred <- merge(pred, test.y, by="id")
roc_obj <- roc(pred$sentiment, pred$prob)
pROC::auc(roc_obj)
head(pred)
head(test$id)
sort(test$id)
j = 1
#setwd(paste("split_", j, sep=""))
setwd(paste("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/UIUC/STAT 542/Project III/split_", j, sep = ""))
test <- read.table("test.tsv", stringsAsFactors = FALSE,
header = TRUE)
sort(test$id)
test[which(test$id==3),]
head(pred)
j = 1
#setwd(paste("split_", j, sep=""))
setwd(paste("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/UIUC/STAT 542/Project III/split_", j, sep = ""))
#source("mymain.R")
# move test_y.tsv to this directory
test.y <- read.table("test_y.tsv", header = TRUE)
pred <- read.table("mysubmission.txt", header = TRUE)
test <- read.table("test.tsv", stringsAsFactors = FALSE,
header = TRUE)
pred <- merge(pred, test.y, by="id")
roc_obj <- roc(pred$sentiment, pred$prob)
pROC::auc(roc_obj)
head(pred)
test[which(test$id==3),]
test[which(test$id==3),2]
head(pred)
library(pROC)
j = 1
#setwd(paste("split_", j, sep=""))
setwd(paste("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/UIUC/STAT 542/Project III/split_", j, sep = ""))
#source("mymain.R")
# move test_y.tsv to this directory
test.y <- read.table("test_y.tsv", header = TRUE)
pred <- read.table("mysubmission.txt", header = TRUE)
test <- read.table("test.tsv", stringsAsFactors = FALSE,
header = TRUE)
pred <- merge(pred, test.y, by="id")
roc_obj <- roc(pred$sentiment, pred$prob)
pROC::auc(roc_obj)
myvocab <- scan(file = "myvocab.txt", what = character())
#####################################
# Load your vocabulary and training data
#####################################
j = 1
setwd(paste("split_", j, sep=""))
#####################################
train = read.table("train.tsv",
stringsAsFactors = FALSE,
header = TRUE)
train$review <- gsub('<.*?>', ' ', train$review)
it_train = itoken(train$review,
preprocessor = tolower,
tokenizer = word_tokenizer)
vectorizer = vocab_vectorizer(create_vocabulary(myvocab,
ngram = c(1L, 2L)))
dtm_train = create_dtm(it_train, vectorizer)
set.seed(542)
ridge=cv.glmnet(x = dtm_train,
y = train$sentiment,
alpha = 1,
family='binomial')
#####################################
test <- read.table("test.tsv", stringsAsFactors = FALSE,
header = TRUE)
test$review <- gsub('<.*?>', ' ', test$review)
it_test = itoken(test$review,
preprocessor = tolower,
tokenizer = word_tokenizer)
vectorizer = vocab_vectorizer(create_vocabulary(myvocab,
ngram = c(1L, 2L)))
dtm_test = create_dtm(it_test, vectorizer)
#####################################
# Compute prediction
# Store your prediction for test data in a data frame
# "output": col 1 is test$id
#           col 2 is the predicted probabilities
#####################################
set.seed(542)
pred.ridge=predict(ridge,newx=data.matrix(dtm_test),type = "response",lambda=ridge$lambda.min)
output=as.data.frame(cbind(test$id,pred.ridge))
colnames(output)=c("id","prob")
write.table(output, file = "mysubmission.txt",
row.names = FALSE, sep='\t')
